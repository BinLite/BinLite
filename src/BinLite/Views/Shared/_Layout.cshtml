@using System.Reflection
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Binlite</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <div class="page">
        <div class="nav flex flex-vertical">
            <div class="flex flex-vertical">
                <div class="title">
                    <img src="/img/title.png"/>
                </div>
                <div class="navCategory">MENU</div>
                <a asp-controller="Home" asp-action="Index"><div class="navItem @(ViewData["Title"]?.ToString() == "Home" ? "navItemActive" : "")">
                    Home
                </div></a>
                @if (User.Identity is not null && User.Identity.IsAuthenticated)
                {
                    var entityList = Assembly.GetExecutingAssembly().GetTypes()
                        .Where(p => typeof(IEntityBase).IsAssignableFrom(p) && typeof(IEntityBase) != p)
                        .Select(s => s.Name)
                        .OrderBy(e => e)
                        .ToList();
                    
                    <div class="navCategory">ENTITIES</div>
                    foreach (var e in entityList)
                    {
                        <a asp-controller="Entity" asp-action="List" asp-route-entity="@e"><div class="navItem @(ViewData["Title"]?.ToString() == "List - " + e ? "navItemActive" : "")">
                            @e
                        </div></a>
                    }
                }
            </div>
            <div class="navCategory">USER</div>
            <div>
                <div class="navItem navItemActive">
                    <img class="avatar" src="@User.AvatarUrl(32)"/>
                    @User.Username()
                </div>
                <a asp-controller="Home" asp-action="Logout"><div class="navItem">
                    Logout
                </div></a>
            </div>
        </div>
        <div class="container">
            <div class="containerInner">
                @RenderBody()
            </div>
        </div>
    </div>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

// <auto-generated />
using System;
using BinLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BinLite.Migrations
{
    [DbContext(typeof(SiteDbContext))]
    [Migration("20221124175402_RemovePhone-2022-11-24")]
    partial class RemovePhone20221124
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BinLite.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentRoleRoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.HasIndex("ParentRoleRoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BinLite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("DiscordId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("DiscordId")
                        .IsUnique()
                        .HasFilter("[DiscordId] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RoleUsersUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRolesRoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleUsersUserId", "UserRolesRoleId");

                    b.HasIndex("UserRolesRoleId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("BinLite.Models.Role", b =>
                {
                    b.HasOne("BinLite.Models.Role", "ParentRole")
                        .WithMany()
                        .HasForeignKey("ParentRoleRoleId");

                    b.Navigation("ParentRole");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("BinLite.Models.User", null)
                        .WithMany()
                        .HasForeignKey("RoleUsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BinLite.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("UserRolesRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
